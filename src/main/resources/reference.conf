konstructs {
  org/konstructs/light-stone-basic-blocks {
    class = "org.konstructs.lightstone.LightStoneBasicBlocksPlugin"
    light-stone-plugin = org/konstructs/light-stone
  }
  org/konstructs/light-stone {
    class = "org.konstructs.lightstone.LightStonePlugin"
    propagation-delay = 500
  }
  org/konstructs/block-manager {
    classes {
      org/konstructs/class/light-stone/LightStone {}
      org/konstructs/class/light-stone/LightStoneLightColour {
        light-colour = ece
      }
      org/konstructs/class/light-stone/LightStoneLightLevel {
        light-level = 3
      }
    }
    blocks {
      org/konstructs/light-stone/ore {
        classes = {
          org/konstructs/class/ore/Ore.order = 1
          org/konstructs/class/Stone.order = 2
          org/konstructs/class/light-stone/LightStoneLightColour.order = 3
          org/konstructs/class/light-stone/LightStoneLightLevel.order = 4
        }
      }
      org/konstructs/light-stone/emitter {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
          org/konstructs/class/light-stone/LightStoneLightColour {}
          org/konstructs/class/light-stone/LightStoneLightLevel {}
        }
        faces = [1, 1, 1, 1, 0, 1]
        orientable = true
        destroyed-as = org/konstructs/light-stone/emitter-off
      }
      org/konstructs/light-stone/emitter-off {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
        }
        faces = [1, 1, 1, 1, 0, 1]
        orientable = true
        destroyed-as = org/konstructs/light-stone/emitter-off
      }
      org/konstructs/light-stone/mirror {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
          org/konstructs/class/light-stone/LightStoneLightColour {}
          org/konstructs/class/light-stone/LightStoneLightLevel {}
        }
        faces = [2, 0, 3, 3, 1, 3]
        orientable = true
        destroyed-as = org/konstructs/light-stone/mirror-off
      }
      org/konstructs/light-stone/mirror-pass {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
          org/konstructs/class/light-stone/LightStoneLightColour {}
          org/konstructs/class/light-stone/LightStoneLightLevel {}
        }
        faces = [2, 3, 3, 3, 1, 0]
        orientable = true
        destroyed-as = org/konstructs/light-stone/mirror-off
      }
      org/konstructs/light-stone/mirror-off {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
        }
        faces = [2, 0, 3, 3, 1, 3]
        orientable = true
        destroyed-as = org/konstructs/light-stone/mirror-off
      }
      org/konstructs/light-stone/mirror-pass-off {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
        }
        faces = [2, 3, 3, 3, 1, 0]
        orientable = true
        destroyed-as = org/konstructs/light-stone/mirror-off
      }
      org/konstructs/light-stone/detector-on {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
          org/konstructs/class/light-stone/LightStoneLightColour {}
          org/konstructs/class/light-stone/LightStoneLightLevel {}
        }
        faces = [1, 1, 1, 1, 0, 2]
        orientable = true
        destroyed-as = org/konstructs/light-stone/detector-off
      }
      org/konstructs/light-stone/detector-off {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
        }
        faces = [1, 1, 1, 1, 0, 2]
        orientable = true
        destroyed-as = org/konstructs/light-stone/detector-off
      }
      org/konstructs/light-stone/lamp-off {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
        }
        destroyed-as = org/konstructs/light-stone/lamp-off
      }
      org/konstructs/light-stone/lamp-on {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/light-stone/LightStoneLightColour {}
        }
        destroyed-as = org/konstructs/light-stone/lamp-off
        light-level = 15
      }
      org/konstructs/light-stone/splitter-on {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
          org/konstructs/class/light-stone/LightStoneLightColour {}
          org/konstructs/class/light-stone/LightStoneLightLevel {}
        }
        faces = [2, 0, 2, 2, 1, 0]
        orientable = true
         destroyed-as = org/konstructs/light-stone/splitter-off
      }
      org/konstructs/light-stone/splitter-off {
        classes = {
          org/konstructs/class/light-stone/LightStone {}
          org/konstructs/class/Stone {}
        }
        faces = [2, 0, 2, 2, 1, 0]
        orientable = true
        destroyed-as = org/konstructs/light-stone/splitter-off
      }
    }
  }
  org/konstructs/konstructing {
    konstructs {
      org/konstructs/light-stone/emitter-off {
        match {
          stacks = [
            { id = org/konstructs/stone },
            { id = org/konstructs/light-stone/ore }
          ]
          rows = 2
          columns = 1
        }
        result.id = org/konstructs/light-stone/emitter-off
      }
      org/konstructs/light-stone/splitter-off {
        match {
          stacks = [
            { id = org/konstructs/light-stone/emitter-off },
            { id = org/konstructs/light-stone/emitter-off }
          ]
          rows = 2
          columns = 1
        }
        result.id = org/konstructs/light-stone/splitter-off
      }
      org/konstructs/light-stone/mirror-off {
        match {
          stacks = [
            { id = org/konstructs/light-stone/splitter-off },
            { id = org/konstructs/light-stone/emitter-off }
          ]
          rows = 2
          columns = 1
        }
        result.id = org/konstructs/light-stone/mirror-off
      }
      org/konstructs/light-stone/detector-off {
        match {
          stacks = [
            { id = org/konstructs/light-stone/mirror-off},
            { id = org/konstructs/light-stone/emitter-off}
          ]
          rows = 2
          columns = 1
        }
        result.id = org/konstructs/light-stone/detector-off
      }
      org/konstructs/light-stone/lamp-off {
        match {
          stacks = [
            { id = org/konstructs/light-stone/ore }, { id = org/konstructs/light-stone/ore }, { id = org/konstructs/light-stone/ore },
            { id = org/konstructs/light-stone/ore }, { id = org/konstructs/light-stone/detector-off }, { id = org/konstructs/light-stone/ore },
            { id = org/konstructs/light-stone/ore }, { id = org/konstructs/light-stone/ore }, { id = org/konstructs/light-stone/ore }
          ]
          rows = 3
          columns = 3
        }
        result {
          id = org/konstructs/light-stone/lamp-off
          amount = 9
        }
      }
    }
  }
  org/konstructs/ore {
    ores {
      org/konstructs/light-stone/ore {
        spawns-in = org/konstructs/stone
        radius = 4
        generations = 5
        probability = 500
        max-distance = 15
      }
    }
  }
  universe {
    block-update-events {
      org/konstructs/light-stone-basic-blocks {}
    }
    tertiary-interaction-listeners {
      org/konstructs/light-stone-basic-blocks {}
    }
    listeners {
       org/konstructs/light-stone-basic-blocks {
         org/konstructs/light-stone/receiver {}
       }
    }
  }
}
